<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>name</key>
    <string>EBNF</string>
    <key>scopeName</key>
    <string>source.ebnf</string>
    <key>fileTypes</key>
    <array>
      <string>ebnf</string>
    </array>
    <key>uuid</key>
    <string>18f41b05-a72e-43ad-b5a5-508ce8fbafbc</string>
    <key>patterns</key>
    <array>
      <dict>
        <key>include</key>
        <string>#syntax</string>
      </dict>
    </array>
    <key>repository</key>
    <dict>
      <key>concatenate-symbol</key>
      <dict>
        <key>name</key>
        <string>keyword.operator.concatenate.ebnf</string>
        <key>match</key>
        <string>,</string>
      </dict>
      <key>defining-symbol</key>
      <dict>
        <key>name</key>
        <string>keyword.operator.define.ebnf</string>
        <key>match</key>
        <string>=</string>
      </dict>
      <key>definition-separator-symbol</key>
      <dict>
        <key>name</key>
        <string>keyword.operator.separator.ebnf</string>
        <key>match</key>
        <string>(\||/|!)</string>
      </dict>
      <key>except-symbol</key>
      <dict>
        <key>name</key>
        <string>keyword.operator.except.ebnf</string>
        <key>match</key>
        <string>\-</string>
      </dict>
      <key>repetition-symbol</key>
      <dict>
        <key>name</key>
        <string>keyword.operator.repeat.ebnf</string>
        <key>match</key>
        <string>\*</string>
      </dict>
      <key>integer</key>
      <dict>
        <key>name</key>
        <string>constant.numeric.ebnf</string>
        <key>match</key>
        <string>[0-9]+</string>
      </dict>
      <key>meta-identifier</key>
      <dict>
        <key>comment</key>
        <string>A &lt;meta identifier&gt; is the name of a syntactic element of the language being defined</string>
        <key>name</key>
        <string>entity.name.function.ebnf</string>
        <key>match</key>
        <string>((?:[a-zA-Z])(?:[a-zA-Z0-9])*)</string>
      </dict>
      <key>terminal-string</key>
      <dict>
        <key>name</key>
        <string>constant.string.ebnf</string>
        <key>match</key>
        <string>(\'([a-zA-Z0-9,=\|/!\(\)\[\]\{\}\&lt;\&gt;\*\-\?;\. :\+_%@#\&amp;\$\\\^~"])+\')|(\"([a-zA-Z0-9,=\|/!\(\)\[\]\{\}\&lt;\&gt;\*\-\?;\. :\+_%@#\&amp;\$\\\^~\'])+\")</string>
      </dict>
      <key>special-sequence</key>
      <dict>
        <key>comment</key>
        <string>The meaning of a &lt;special sequence&gt; is not defined in the standard metalanguage.</string>
        <key>name</key>
        <string>constant.string.ebnf</string>
        <key>match</key>
        <string>(\?[a-zA-Z0-9,=\|/!\(\)\[\]\{\}\&lt;\&gt;\*\-;\. :\+_%@#\&amp;\$\\\^~\'\"]\?)</string>
      </dict>
      <key>syntax</key>
      <dict>
        <key>name</key>
        <string>meta.syntax.ebnf</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comment-block</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#syntax-rule</string>
          </dict>
        </array>
      </dict>
      <key>comment-block</key>
      <dict>
        <key>comment</key>
        <string>A comment is allowed anywhere outside a &lt;terminal string&gt;, &lt;meta identifier&gt;, &lt;integer&gt; or &lt;special sequence&gt;</string>
        <key>name</key>
        <string>comment.ebnf</string>
        <key>begin</key>
        <string>\(\*</string>
        <key>end</key>
        <string>\*\)</string>
      </dict>
      <key>syntax-rule</key>
      <dict>
        <key>comment</key>
        <string>A &lt;syntax rule&gt; defines the sequences of symbols represented by a &lt;meta identifier&gt;</string>
        <key>name</key>
        <string>meta.syntax.rule.ebnf</string>
        <key>begin</key>
        <string>((?:[a-zA-Z])(?:\w*))(?:\s)*(=)*(?:\s)*</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.syntax.rule.ebnf</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.assignment.ebnf</string>
          </dict>
        </dict>
        <key>end</key>
        <string>;</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#definitions-list</string>
          </dict>
        </array>
      </dict>
      <key>definitions-list</key>
      <dict>
        <key>comment</key>
        <string>| separates alternative &lt;single definitions&gt;</string>
        <key>name</key>
        <string>meta.definitions.list.ebnf</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#single-definition</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#definition-separator-symbol</string>
          </dict>
        </array>
      </dict>
      <key>single-definition</key>
      <dict>
        <key>comment</key>
        <string>, separates successive &lt;terms&gt;</string>
        <key>name</key>
        <string>meta.definitions.single.ebnf</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#term</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#concatenate-symbol</string>
          </dict>
        </array>
      </dict>
      <key>term</key>
      <dict>
        <key>comment</key>
        <string>A &lt;term&gt; represents any sequence of symbols that is defined by the &lt;factor&gt; but not defined by the &lt;exception&gt;</string>
        <key>name</key>
        <string>meta.term.ebnf</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#factor</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#except-symbol</string>
          </dict>
        </array>
      </dict>
      <key>factor</key>
      <dict>
        <key>comment</key>
        <string>The &lt;integer&gt; specifies the number of repetitions of the &lt;primary&gt;</string>
        <key>name</key>
        <string>meta.factor.ebnf</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#integer</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#primary</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#repetition-symbol</string>
          </dict>
        </array>
      </dict>
      <key>primary</key>
      <dict>
        <key>name</key>
        <string>meta.primary.ebnf</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#optional-sequence</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#repeated-sequence</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#special-sequence</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#grouped-sequence</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#meta-identifier</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#terminal-string</string>
          </dict>
        </array>
      </dict>
      <key>optional-sequence</key>
      <dict>
        <key>comment</key>
        <string>The brackets [ and ] enclose symbols which are optional</string>
        <key>name</key>
        <string>meta.sequence.optional.ebnf</string>
        <key>begin</key>
        <string>\[</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>meta.brace.square.ebnf</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\]</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>meta.brace.square.ebnf</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#definitions-list</string>
          </dict>
        </array>
      </dict>
      <key>repeated-sequence</key>
      <dict>
        <key>comment</key>
        <string>The brackets { and } enclose symbols which may be repeated any number of times</string>
        <key>name</key>
        <string>meta.sequence.repeated.ebnf</string>
        <key>begin</key>
        <string>\{</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>meta.brace.curly.ebnf</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\}</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>meta.brace.curly.ebnf</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#definitions-list</string>
          </dict>
        </array>
      </dict>
      <key>grouped-sequence</key>
      <dict>
        <key>comment</key>
        <string>The brackets ( and ) allow any &lt;definitions list&gt; to be a &lt;primary&gt;</string>
        <key>name</key>
        <string>meta.sequence.grouped.ebnf</string>
        <key>begin</key>
        <string>\(</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>meta.brace.round.ebnf</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\)</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>meta.brace.round.ebnf</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#definitions-list</string>
          </dict>
        </array>
      </dict>
    </dict>
  </dict>
</plist>